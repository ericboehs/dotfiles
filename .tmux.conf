source-file ~/.tmux/tmuxline.conf

# Enable/disable mouse mode (off by default)
bind m set -g mouse on \; display "Mouse ON"
bind M set -g mouse off \; display "Mouse OFF"

set-option -g base-index 1             # Start window index count at 1 instead of 0
set-window-option -g pane-base-index 1 # Tmuxinator likes 1 based panes too
set -g focus-events on                 # Send focus events to vim
set -g buffer-limit 100000             # Increase buffer limits kept for back referencing
set -g history-limit 500000            # Set the history limit higher
set -s escape-time 0                   # Allows for faster key repetition
set -g prefix `                        # Change the default prefix -- C-b is not acceptable -- Vim uses it
setw -g aggressive-resize on           # Agressive window resizing (per window instead of session)
setw -g monitor-activity on            # Highlight window name when their is activity
setw -g automatic-rename off           # Don't let processes rename your windows
bind ` last-window                     # Double type ` for last window
bind \ send-prefix                     # `\ for a literal `

# Use 256 colors
set -g default-terminal "screen-256color"

# Reattach username space
set-option -g default-command "zsh -c exit > /dev/null 2>&1; reattach-to-user-namespace -l zsh"

# Restore "open new pane/window in current directory" functionality in pre 1.9
bind c new-window -c "#{pane_current_path}"

# Use v and s to split the window up
bind-key v split-window -h -c "#{pane_current_path}"
bind-key s split-window -v -c "#{pane_current_path}"

# Use capital vim motion keys for resizing (BIG)
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

# Use meta+vim motion keys for resizing
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-h resize-pane -L
bind-key -r C-l resize-pane -R

# use vim motion keys while in copy mode
setw -g mode-keys vi

# use the vim motion keys to move between panes
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# use the Option+h|j|k|l to move between panes
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

# Option+z to zoom
bind -n M-z resize-pane -Z

# Send literal Option+Arrow/h|j|k|l|z
bind M-h send-keys 'M-h'
bind M-j send-keys 'M-j'
bind M-k send-keys 'M-k'
bind M-l send-keys 'M-l'
bind M-z send-keys 'M-z'

# make vi mode more vi like
bind Escape copy-mode
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
bind-key -T copy-mode-vi 'y' send-keys -X copy-selection

# Yank to clipboard too
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"

# Switch to boards pane
bind b select-window -t 7

# Dim inactive panes
set -g pane-border-bg colour7
set -g pane-border-fg colour15
set -g pane-active-border-bg colour15
set -g pane-active-border-fg colour7
set -g window-style 'bg=colour7'
set -g window-active-style 'bg=colour15'

# Start a new session if one doesn't exist
# new-session -A -s default -n editor
